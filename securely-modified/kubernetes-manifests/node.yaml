apiVersion: apps/v1
kind: Deployment
metadata:
  name: node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node
  template:
    metadata:
      labels:
        app: node
    spec:
      hostPID: false # Controls whether containers can share host process namespace
      hostIPC: false # Controls whether containers can share host process namespace
      hostNetwork: false # Controls whether containers can use the host network       
      containers:
        - name: node
          image: node-app-secure:v1
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"          
          env:
          - name: DB_USER
            value: root 
          - name: DB_PASSWORD 
            value: password 
          - name: DB_HOST
            value: mysql 
          - name: DB_NAME
            value: mysql             
          ports:
            - containerPort: 3000
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities: # You should always drop all capabilities and only read those that your application needs to operate
              drop: # drop should always come before add
                - ALL       
            privileged: false # Controls whether pods can run privileged containers
            #runAsNonRoot: true # when running a distroless image and seccomp profile I've found that in this case I needed to disable it to get the container running
            readOnlyRootFilesystem: true # Requires the use of a read only root filesystem            
            allowPrivilegeEscalation: false # Restricts escalation to root privileges                  
---
apiVersion: v1
kind: Service
metadata:
  name: node
spec:
  selector:
    app: node
  ports:
    - port: 3000
      targetPort: 3000
