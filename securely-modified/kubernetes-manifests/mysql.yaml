kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
      annotations:
        container.apparmor.security.beta.kubernetes.io/mysql: runtime/default # replace runtime/default with your custom profile, e.g. localhost/deny-write etc.
    spec:
      hostPID: false # Controls whether containers can share host process namespace
      hostIPC: false # Controls whether containers can share host process namespace
      hostNetwork: false # Controls whether containers can use the host network            
      securityContext:
        runAsUser: 999 # run as mysql user
        runAsGroup: 999
        fsGroup: 2000
      containers:
        - image: mariadb@sha256:8040983db146f729749081c6b216a19d52e0973134e2e34c0b4fd87f48bc15b0 # this is a specific version of mariadb:10.5.8 
          name: mysql
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"          
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
        #  below commented out as the hardened image rapidfort/mariadb:latest wouldn't work on my Mac M1 ARM chipset but will on x86
        #- image: rapidfort/mariadb:latest
        #  name: mysql
        #  env:          
        #    - name: MARIADB_ROOT_PASSWORD
        #      value: password              
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
          securityContext:
            seccompProfile:
              type: RuntimeDefault # this seccomp profile provides a strong set of security defaults while preserving the functionality of the workload  
            capabilities: # You should always drop all capabilities and only add those that your application needs to operate
              drop: # drop should always come before add
                - ALL
            privileged: false # Controls whether pods can run privileged containers
            runAsNonRoot: true
            #readOnlyRootFilesystem: true # Requires the use of a read only root filesystem (not always possible to apply when mounting volumes)            
            allowPrivilegeEscalation: false # Restricts escalation to root privileges               
      volumes:    
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
